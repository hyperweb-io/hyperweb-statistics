name: Fetch Contribution Data 🛠️

on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:

jobs:
  container-job:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: pyramation/postgis
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'

      - name: Install dependencies
        run: yarn install

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            sleep 1
          done

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_FE_DEPLOYER_ACCESS }}
          aws-secret-access-key: ${{ secrets.AWS_FE_DEPLOYER_SECRET }}
          aws-region: 'us-east-1'

      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o /tmp/awscliv2.zip
          unzip -q /tmp/awscliv2.zip -d /tmp
          rm /tmp/awscliv2.zip
          sudo /tmp/aws/install --update
          rm -rf /tmp/aws/

      - name: Run it 🚀
        run: |
          cd ./packages/stats-db
          ./scripts/schema.sh
          yarn dev
        env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATABASE_URL: postgres://postgres:password@localhost:5432/example_db

          # AWS S3 Configuration
          AWS_REGION: us-east-1
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

          # AWS Credentials
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_FE_DEPLOYER_ACCESS }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_FE_DEPLOYER_SECRET }}
